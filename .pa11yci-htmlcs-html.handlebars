<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta charset="utf-8" />
	<title>Accessibility Report Summary (HTMLCS)</title>
	<style>
		html,
		body {
			background-color: #ffffff;
			color: #333333;
			font-family: Arial, Helvetica, sans-serif;
			font-size: 16px;
			line-height: 22px;
			margin: 10;
			padding: 0;
		}

		main {
			margin: 10px auto;
			max-width: 1000px;
			text-align: center;
		}

		h1 {
			font-size: 24px;
			line-height: 24px;
			margin-bottom: 10px;
		}

		.label {
			display: inline-block;
			font-size: 1.25em;
			padding-right: 10px;
		}

		.pages {
			list-style-type: none;
			margin: 10px 0 20px 0;
			padding: 0;
		}

		.page {
			background-color: #ffffff;
			border: 1px solid #cccccc;
			border-radius: 5px;
			display: flex;
			justify-content: space-between;
			margin: 15px 0;
			padding: 10px;
		}

		.page.hidden {
			display: none;
		}

		.pageLink {
			display: inline-block;
			flex-grow: 1;
			overflow: hidden;
			padding: 5px;
			text-align: left;
			text-overflow: ellipsis;
			white-space: nowrap;
		}

		.counts {
			flex-grow: 0;
			margin: 0;
			max-width: 375px;
			min-width: 375px;
			padding: 0;
		}

		.count {
			background-color: #f4f4f4;
			border: 1px solid #aaaaaa;
			border-radius: 5px;
			display: inline-block;
			margin-right: 5px;
			min-width: 105px;
			padding: 5px;
			text-align: center;
		}

		.filter .button {
			background-color: #ffffff;
			border: 1px solid #ffffff;
			border-radius: 5px;
			display: inline-block;
			margin-right: 5px;
			min-width: 105px;
			padding: 5px;
			text-align: center;
		}

		#pa11yIssues:not(.hidden),
		#pageErrors:not(.hidden) {
			background-color: #ffdddd;
			border-color: #ff9696;
		}

		#noIssues:not(.hidden) {
			background-color: #defce2;
			border-color: #89e791;
		}

		.button:hover {
			cursor: pointer;
		}

		.hasErrors .error {
			background-color: #ffdddd;
			border-color: #ff9696;
		}

		.hasWarnings .warning {
			background-color: #ffffdd;
			border-color: #e7c12b;
		}

		.hasNotices .notice {
			background-color: #eef4ff;
			border-color: #b6d0ff;
		}

		.pageError .error {
			color: #cc0000;
			display: inline-block;
			margin-right: 5px;
			padding: 5px 0;
			text-align: left;
			width: 100%;
		}
	</style>
</head>

<body>
	<main>
		<h1>HTMLCS Accessibility Report Summary</h1>
		<p>Generated at: {{date}}</p>
		<div class="filter">
			<span class="label">Filter page results: </span>
			<span id="pa11yIssues" class="button" title="HTMLCS analyzed page and found issues">HTMLCS Issues</span>
			<span id="noIssues" class="button" title="HTMLCS analyzed page and found no issues">No Issues</span>
			<span id="pageErrors" class="button" title="HTMLCS failed to analyze page">Page Errors</span>
		</div>
		<ul class="pages">
			{{#pages}}
			{{~#if message~}}
			<li class="page pageError">
				<span class="pageLink" title="{{url}}">{{url}}</span>
				<p class="counts">
					<span class="error">{{message}}</span>
				</p>
			</li>
			{{~else~}}
			<li class="page{{~#if issues.errors}} hasErrors{{/if}}{{~#if issues.warnings}} hasWarnings{{/if}}{{~#if issues.notices}} hasNotices{{/if}}">
				{{~#if htmlReport~}}
				<a class="pageLink" href="{{htmlReport}}" title="{{url}}">{{url}}</a>
				{{~else~}}
				<span class="pageLink" title="{{url}}">{{url}}</span>
				{{~/if~}}
				<p class="counts">
					<span class="count error">{{issues.errors}} errors</span>
					<span class="count warning">{{issues.warnings}} warnings</span>
					<span class="count notice">{{issues.notices}} notices</span>
				</p>
			</li>
			{{~/if~}}
			{{/pages}}
		</ul>
	</main>
	<script>
		const togglePages = (btn, pageQuery) => {
			const className = 'hidden';
			document.getElementById(btn).classList.toggle(className);
			document.querySelectorAll(pageQuery).forEach(page => {
				page.classList.toggle(className);
			});
		};

		document.getElementById('pa11yIssues').addEventListener('click', () => togglePages('pa11yIssues', '.page.hasErrors, .page.hasWarnings, .page.hasNotices'));
		document.getElementById('pageErrors').addEventListener('click', () => togglePages('pageErrors', '.page.pageError'));
		document.getElementById('noIssues').addEventListener('click', () => togglePages('noIssues', '.page:not(.hasErrors):not(.hasWarnings):not(.hasNotices):not(.pageError)'));
	</script>
</body>

</html>
